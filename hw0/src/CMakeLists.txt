# Prevent compilation in-source
IF ( ${CMAKE_BINARY_DIR} STREQUAL ${PROJECT_SOURCE_DIR} )
	Message( " " )
	Message( FATAL_ERROR "Source and build directories are the same.
	Create an empty build directory,
	change into it and re-invoke cmake" )
ENDIF()


# Tell Cmake where to leave executables
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR})
IF(APPLE)
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/macos/)	
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/macos/)
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/macos/)
ELSEIF(UNIX)
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/linux/)
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/linux/)
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/linux/)
ELSEIF(WIN32)
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/win32/)
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/win32/)
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/win32/)
ENDIF()


# Path of header files relative to this file path
SET(H_PATH ${PROJECT_SOURCE_DIR}/header/)
MESSAGE(${H_PATH})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})


# Search Additional Libraries
FIND_PACKAGE(OpenCV REQUIRED)


IF (OpenCV_FOUND)
	MESSAGE("OpenCV Found")
	INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
	LINK_DIRECTORIES(${OpenCV_LIB_DIRS})
	SET(SYSTEM_LIBS ${SYSTEM_LIBS} ${OpenCV_LIBS})
ENDIF()


SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
INCLUDE_DIRECTORIES( ${H_PATH} )


ADD_EXECUTABLE(homework0 main.cpp)
TARGET_LINK_LIBRARIES(homework0 ${SYSTEM_LIBS} )

MESSAGE(
"\n
################################################
#  Please go to hpc21_hzny2/hw0/bin/{Your OS}  #
#  to get executable file *homework0*          #
#  after finsh *make*!                         #
################################################
\n" 
)